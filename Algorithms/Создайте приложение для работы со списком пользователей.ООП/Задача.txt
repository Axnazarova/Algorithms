Создайте приложение для работы со списком пользователей.
Создайте класс Application, который описывает работу приложения. Приложение запрашивает у пользователя ввод команд и данных для её выполнения. В зависимости от введённой команды, приложение добавляет, переименовывает или удаляет пользователя в списке.

Приложение использует сущности классов User и UsersList.

1) Создайте класс User.
Этот класс описывает сущность (объект) конкретного пользователя и методы работы с ним.

Конструктор класса принимает id и имя пользователя name в качестве параметра и создаёт объект с соответствующими свойствами.

Класс имеет метод rename(), который изменяет имя пользователя на указанное в параметре.

2) Создайте класс UsersList.
Этот класс описывает сущность (объект) списка пользователей и методы работы с ним.

Конструктор класса создаёт объект со следующими свойствами:
1) users — пустой массив для хранения списка пользователей;
2) currentId — счётчик идентификаторов (id) созданных пользователей. Идентификатор может не совпадать с количеством элементов в списке пользователей: например, если создано пять пользователей с id от 0 до 4, а впоследствии пользователь с id = 3 удалён, то в списке остаётся 4 элемента, а новому пользователю будет присвоен id = 5.

Класс имеет следующие методы:
1) addUser(name) — добавление пользователя с именем name. Пользователь создаётся с помощью класса User.
2) removeUser(id) — удаление пользователя по id.
3) renameUser(id, name) — переименование пользователя по id. 
4) getAllUsersString() — метод, возвращающий список пользователей одной строкой через точку с запятой.

3) Создайте класс Application.
Этот класс отвечает за запуск приложения и взаимодействие с пользователем с помощью prompt и console.log.

Конструктор создаёт свойство usersList, записывая в него список пользователей, созданный с помощью класса UsersList.

Класс имеет метод init(), который запускает приложение, запрашивает у пользователя команды, и обрабатывает введённые значения. 
Пример команд, которые может ввести пользователь:
create Tom — создание пользователя c именем Tom;
rename 0 Sam — изменить имя пользователя с id = 0 на имя Sam;
remove 0 — удаление пользователя с id = 0.

Если пользователь вводит сообщение неверного формата, то ничего не происходит и программа запрашивает команду ещё раз.
Приложение прекращает работу, если пользователь нажал «Отмена».


